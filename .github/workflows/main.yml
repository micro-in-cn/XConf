name: CI
on: [push,pull_request]
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Code
      uses: actions/checkout@v1
    - name: Intsall Golangci-lint 
      run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b . latest
    - name: Lint
      run: ./golangci-lint run --skip-dirs=".git|.github|dashboard|doc" --timeout=5m
      
  test:
    name: Unit Testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go
    - name: Code
      uses: actions/checkout@v1
    - name: Go Get dependencies
      run: go get -v -t -d ./...
    - name: Go Test
      run: go test -v ./...

  docker:
    needs: [lint, test]
    name: docker build and push
    runs-on: ubuntu-latest
    steps:
    - name: Code
      uses: actions/checkout@v1
    - name: all in one
      run: |
          make all-in-one
          docker login docker.io -u ${{ secrets.REGISTRY_USERNAME }} -p ${{ secrets.REGISTRY_PASSWORD }}
          docker tag xconf-all:latest ${{ secrets.REGISTRY_USERNAME }}/xconf-all
          docker push ${{ secrets.REGISTRY_USERNAME }}/xconf-all

  deploy:
    needs: docker
    name: deploy
    runs-on: ubuntu-latest
    steps:
    - name: deploy all in one demo
      uses: appleboy/ssh-action@master
      with:
        host: xconf.mogutou.xyz
        username: ${{ secrets.ECS_USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: ${{ secrets.DEPLOY_CMD }}
